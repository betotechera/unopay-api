import java.util.regex.Matcher

buildscript {
	ext {
		springBootVersion = '1.5.2.RELEASE'
	}

	repositories {
		mavenCentral()
	}

	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'net.researchgate:gradle-release:2.4.0'
	}

}

plugins {
	id 'net.researchgate.release' version '2.4.0'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

task wrapper(type: Wrapper) {
	gradleVersion = '3.4.1'
}

jar {
	baseName = 'unopay-api'
	version = ''
}

springBoot {
	executable = true
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenLocal()
    mavenCentral()
	maven { url "${nexusUrl}/content/repositories/thirdparty/" }
	maven { url "${nexusUrl}/content/repositories/releases/" }
}

dependencies {
	compile 'br.com.unopay:unopay-common-dependencies:0.0.3'
	compile 'br.com.unopay:unopay-boot-commons:0.0.10'

	compile 'org.springframework.boot:spring-boot-starter-security'
	compile 'org.springframework.security.oauth:spring-security-oauth2'
	compile 'org.springframework.boot:spring-boot-starter-data-jpa'
	compile 'org.springframework.hateoas:spring-hateoas'
	compile 'com.google.guava:guava:21.0'
	compile 'com.oracle.jdbc:ojdbc8:12.2.0.1'
	compile 'org.hsqldb:hsqldb'
	compile "org.flywaydb:flyway-core:4.1.1"

	compileOnly 'org.projectlombok:lombok:1.16.14'

	testCompile 'com.jayway.jsonpath:json-path'
	testCompile 'org.springframework.boot:spring-boot-starter-test'
}

release {
	failOnCommitNeeded = true
	failOnPublishNeeded = true
	failOnSnapshotDependencies = true
	failOnUnversionedFiles = true
	failOnUpdateNeeded = true
	revertOnFail = true
	tagCommitMessage = 'creating tag: '
	buildTasks = ['build']
	tagTemplate = 'unopay-api-${version}'
	versionPatterns = [
			/(\d+)([^\d]*$)/: { Matcher m, Project p -> m.replaceAll("${(m[0][1] as int) + 1}${m[0][2]}") }
	]
	scmAdapters = [
			net.researchgate.release.GitAdapter,
	]

	git {
		requireBranch = 'master'
		pushToRemote = 'origin'
		commitVersionFileOnly = false
	}
}

bootRun {
	systemProperties System.properties
}